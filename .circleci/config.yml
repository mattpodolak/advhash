version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.4
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            sudo pip install --upgrade pip
            python setup.py sdist bdist_wheel
            sudo pip install coverage pytest imagehash Pillow
            sudo pip install .
      - run:
          name: run tests
          command: |
            mkdir test-results
            coverage run --source=. -m pytest --junitxml=test-results/junit.xml
            coverage report
            coverage html
      - codecov/upload:
          file: htmlcov
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: htmlcov
  test_pypi_publish:
    docker:
      - image: circleci/python:3.6.4
    steps:
      - checkout
      - run:
          name: init .pypirc
          command: |
            echo -e "[testpypi]" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $TEST_PYPI_TOKEN" >> ~/.pypirc
      - run:
          name: build and publish to Test PyPi
          command: |
            sudo pip install --upgrade pip
            python setup.py sdist bdist_wheel
            sudo pip install twine
            python -m twine upload --repository testpypi dist/*
  pypi_publish:
    docker:
      - image: circleci/python:3.6.4
    steps:
      - checkout
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $PYPI_TOKEN" >> ~/.pypirc
      - run:
          name: build and publish to PyPi
          command: |
            sudo pip install --upgrade pip
            python setup.py sdist bdist_wheel
            sudo pip install twine
            python -m twine upload dist/*
workflows:
  build_test_publish:
    jobs:
      - build
      - test_pypi_publish:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
      - pypi_publish:
          requires:
            - build
          filters:
            branches:
              only:
                - main